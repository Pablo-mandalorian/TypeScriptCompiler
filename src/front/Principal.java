/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package front;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author andrestellesrivera
 */
public class Principal extends javax.swing.JFrame {

    private Editor editor;
    private Salida salida;
    private Editor tmpEditor;
    public BufferedReader br;
    public String strCurrentLine;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnGuardarComo = new javax.swing.JButton();
        btnGuardarTodo = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnCerrarTodo = new javax.swing.JButton();
        btnCompilar = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        tpnFuentes = new javax.swing.JTabbedPane();
        tpnSalidas = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itmNuevo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        btnNuevo.setText("Nuevo");
        btnNuevo.setFocusable(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnAbrir.setText("Abrir");
        btnAbrir.setFocusable(false);
        btnAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAbrir);

        btnGuardar.setText("Guardar");
        btnGuardar.setFocusable(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuardar);

        btnGuardarComo.setText("Guardar Como");
        btnGuardarComo.setFocusable(false);
        btnGuardarComo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardarComo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarComoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuardarComo);

        btnGuardarTodo.setText("Guardar Todo");
        btnGuardarTodo.setFocusable(false);
        btnGuardarTodo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardarTodo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarTodoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuardarTodo);

        btnCerrar.setText("Cerrar");
        btnCerrar.setFocusable(false);
        btnCerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCerrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCerrar);

        btnCerrarTodo.setText("Cerrar Todo");
        btnCerrarTodo.setFocusable(false);
        btnCerrarTodo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCerrarTodo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCerrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarTodoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCerrarTodo);

        btnCompilar.setText("Compilar");
        btnCompilar.setFocusable(false);
        btnCompilar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCompilar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCompilar);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setLeftComponent(tpnFuentes);
        jSplitPane1.setRightComponent(tpnSalidas);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        itmNuevo.setMnemonic('N');
        itmNuevo.setText("Nuevo");
        itmNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(itmNuevo);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNuevoActionPerformed
        int resultado = jFileChooser1.showSaveDialog(this.itmNuevo);
        File archivo = jFileChooser1.getSelectedFile();
        if (resultado == jFileChooser1.APPROVE_OPTION) {
            if (!archivo.exists()) {
                editor = new Editor(archivo);               
                tpnFuentes.addTab(archivo.getName(), editor);
                tpnFuentes.setSelectedComponent(editor);
            } else {
                JOptionPane.showMessageDialog(this, "El Archivo ya existe");
            }
        } else if (resultado == jFileChooser1.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(this, "Cancelaste la acción");
        }
    }//GEN-LAST:event_itmNuevoActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        int resultado = jFileChooser1.showSaveDialog(this.btnNuevo);
        File archivo = jFileChooser1.getSelectedFile();

        if (resultado == jFileChooser1.APPROVE_OPTION) {
            if (!archivo.exists()) {
                editor = new Editor(archivo);
                tpnFuentes.addTab(archivo.getName(), editor);
                tpnFuentes.setSelectedComponent(editor);
            } else {
                JOptionPane.showMessageDialog(this, "El Archivo ya existe");
            }
        } else if (resultado == jFileChooser1.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(this, "Cancelaste la acción");
        }

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if(tpnFuentes.getComponentCount() == 0){
            JOptionPane.showMessageDialog(this, "No hay ningun archivo abierto");
        }else{
            editor = (Editor) tpnFuentes.getSelectedComponent();
            editor.guardar();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarTodoActionPerformed
        for (int i = 0; i < tpnFuentes.getComponentCount(); i++) {
            editor = (Editor) tpnFuentes.getComponentAt(i);
            editor.guardar();
            System.out.println("");
        }
    }//GEN-LAST:event_btnGuardarTodoActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        editor = (Editor) tpnFuentes.getSelectedComponent();
        int resultado = JOptionPane.showConfirmDialog(this, "Deseas Guardar el archivo?");
        switch (resultado) {
            case JOptionPane.OK_OPTION -> {
                editor = (Editor) tpnFuentes.getSelectedComponent();
                editor.guardar();
                JOptionPane.showMessageDialog(this, "Se guardo el archivo");
                tpnFuentes.remove(editor);
            }
            case JOptionPane.NO_OPTION ->
                tpnFuentes.remove(editor);
            case JOptionPane.CANCEL_OPTION ->
                JOptionPane.showMessageDialog(this, "Cancelaste la acción");
            case JOptionPane.CLOSED_OPTION ->
                JOptionPane.showMessageDialog(this, "Cerraste la ventana");
            default -> {
            }
        }

    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnCerrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarTodoActionPerformed
        int resultado = JOptionPane.showConfirmDialog(this, "Deseas Guardar el archivo?");
        switch (resultado) {
            case JOptionPane.OK_OPTION -> {
                for (int i = 0; i < tpnFuentes.getComponentCount(); i++) {
                    editor = (Editor) tpnFuentes.getComponentAt(i);
                    editor.guardar();
                    System.out.println("");
                }
                JOptionPane.showMessageDialog(this, "Se guardo el archivo");
                while (tpnFuentes.getComponentCount() > 0) {
                    editor = (Editor) tpnFuentes.getComponentAt(0);
                    tpnFuentes.remove(editor);
                    System.out.println("");
                }
            }
            case JOptionPane.NO_OPTION -> {
                while (tpnFuentes.getComponentCount() > 0) {
                    editor = (Editor) tpnFuentes.getComponentAt(0);
                    tpnFuentes.remove(editor);
                    System.out.println("");
                }
            }
            case JOptionPane.CANCEL_OPTION ->
                JOptionPane.showMessageDialog(this, "Cancelaste la opción");
            case JOptionPane.CLOSED_OPTION ->
                JOptionPane.showMessageDialog(this, "Cerraste la ventana");
            default -> {
            }
        }
    }//GEN-LAST:event_btnCerrarTodoActionPerformed

    //No se como agregar el contenido del archivo como un editor
    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed

        int resultado = jFileChooser1.showOpenDialog(this.btnAbrir);
        File archivo = jFileChooser1.getSelectedFile();
        StringBuilder sb = new StringBuilder();
        String s;
        
        if (resultado == jFileChooser1.APPROVE_OPTION) {
            if (archivo.exists()) {
                try {
                    editor = new Editor(archivo);
                    tpnFuentes.addTab(archivo.getName(), editor);
                    tpnFuentes.setSelectedComponent(editor);
                    editor = (Editor) tpnFuentes.getSelectedComponent();
                    InputStream input = new FileInputStream(archivo);
                    DataInputStream inst = new DataInputStream(input);
                    int count = input.available();
                    byte[] ary = new byte[count];
                    try {
                        inst.read(ary);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    for (byte bt : ary) {
                        char k = (char) bt;
                        //System.out.println(k+"");
                        
                        sb.append(k);
                        editor.txtContenido.append(k + "");
                    }
                    
                    s = sb.toString();
                    System.out.println(s);
                    
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El Archivo no existe");
            }
        } else if (resultado == jFileChooser1.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(this, "Cancelaste la acción");
        }


    }//GEN-LAST:event_btnAbrirActionPerformed


    private void btnGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarComoActionPerformed
        editor = (Editor) tpnFuentes.getSelectedComponent();
        jFileChooser1.showSaveDialog(this.btnGuardarComo);
        File newFile = jFileChooser1.getSelectedFile();
        if (!newFile.exists()) {
            editor = new Editor(newFile);
            tpnFuentes.addTab(newFile.getName(), editor);
            tpnFuentes.setSelectedComponent(editor);
            tmpEditor = (Editor) tpnFuentes.getComponentAt(tpnFuentes.getSelectedIndex() - 1);
            String contenido = tmpEditor.txtContenido.getText();
            editor.txtContenido.append(contenido);
            for (int i = 0; i < tpnFuentes.getComponentCount(); i++) {
                editor = (Editor) tpnFuentes.getComponentAt(i);
                editor.guardar();
                System.out.println("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "El Archivo ya existe");
        }
        tpnFuentes.remove(tmpEditor);
    }//GEN-LAST:event_btnGuardarComoActionPerformed

    private void btnCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilarActionPerformed
        editor = (Editor) tpnFuentes.getComponentAt(tpnFuentes.getSelectedIndex());
        File archivo = editor.archivo.getAbsoluteFile();
        System.out.println(archivo);
        if(!archivo.exists()){
            JOptionPane.showMessageDialog(this, "No hay un archivo seleccionado");
        }else if(archivo.exists()) {
                salida = new Salida(archivo);
                tpnSalidas.addTab(archivo.getName() + " Output", salida);
                tpnSalidas.setSelectedComponent(salida);                 
        }        
        salida.compilar();
    }//GEN-LAST:event_btnCompilarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnCerrarTodo;
    private javax.swing.JButton btnCompilar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarComo;
    private javax.swing.JButton btnGuardarTodo;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JMenuItem itmNuevo;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTabbedPane tpnFuentes;
    public javax.swing.JTabbedPane tpnSalidas;
    // End of variables declaration//GEN-END:variables
}
