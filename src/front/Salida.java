/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package front;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.JOptionPane;
import lexico.AnalisisLexico;
import lexico.Lexico;

/**
 *
 * @author andrestellesrivera
 */
public class Salida extends javax.swing.JPanel {

    public File archivo;
    private static BufferedReader bf;
    private static Lexico lexico;
    
    /**
     * Creates new form Salida
     * @param archivo
     */
    public Salida(File archivo) {
        
        this.archivo = archivo;

        if (archivo.exists()) {
            try {
                if (!archivo.createNewFile()) {
                    initComponents();
                } else {
                    JOptionPane.showMessageDialog(this, "No fue posible abrir la terminal");
                }
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(Salida.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                if (!archivo.createNewFile()) {
                    JOptionPane.showMessageDialog(this, "No fue posible abrir la terminal");
                } else {
                    initComponents();
                }
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(Salida.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtSalida = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        txtSalida.setEditable(false);
        txtSalida.setColumns(20);
        txtSalida.setRows(5);
        jScrollPane1.setViewportView(txtSalida);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public void compilar(/*File archivo*/){
          try {
            //this.archivo = archivo;
            bf = new BufferedReader(new FileReader(this.archivo));
            lexico = new Lexico(bf);
            loop: while(true){
               Symbol token = lexico.next_token();
                System.out.print("Texto: \n" + token.toString() + " " + token.value);
                txtSalida.append("Texto: \n" + token.toString() + " " + token.value);
                switch (token.sym) {
                    // Reserved Words
                    case 1 -> {
                        System.out.println(" Break \n"); 
                        txtSalida.append(" Break \n");
                    }
                    case 2 -> {
                        System.out.println(" Case \n");
                         txtSalida.append(" Case \n");
                    }
                    case 3 -> {
                        System.out.println(" Catch \n");
                        txtSalida.append(" Catch \n");
                    }
                    case 4 -> {
                        System.out.println(" Class \n");
                        txtSalida.append(" Class \n");
                    }
                    case 5 -> {
                        System.out.println(" Const \n");
                        txtSalida.append(" Tipo de dato Const \n");
                    }
                    case 6 -> {
                        System.out.println(" Continue \n");
                        txtSalida.append(" Continue \n");
                    }
                    case 7 -> {
                        System.out.println(" Debugger \n");
                        txtSalida.append(" Debugger \n");
                    }
                    case 8 -> {
                        System.out.println(" Default \n");
                        txtSalida.append(" Default \n");
                    }
                    case 9 -> {
                        System.out.println(" Delete \n");
                        txtSalida.append(" Delete \n");
                    }
                    case 10 -> {
                        System.out.println(" Do \n");
                        txtSalida.append(" Do \n");
                    }
                    case 11 -> {
                        System.out.println(" Else \n");
                        txtSalida.append(" Else \n");
                    }
                    case 12 -> {
                        System.out.println(" Enum \n");
                        txtSalida.append(" Enum \n");
                    }
                    case 13 -> {
                        System.out.println(" EXPORT \n");
                        txtSalida.append(" EXPORT \n");
                    }
                    case 14 -> {
                        System.out.println(" EXTENDS \n");
                        txtSalida.append(" EXTENDS \n");
                    }
                    case 15 -> {
                        System.out.println(" False \n");
                        txtSalida.append(" False \n");
                    }
                    case 16 -> {
                        System.out.println(" Finally \n");
                        txtSalida.append(" Finally \n");
                    }
                    case 17 -> {
                        System.out.println(" For \n");
                        txtSalida.append(" For \n");
                    }
                    case 18 -> {
                        System.out.println(" Function \n");
                        txtSalida.append(" Function \n");
                    }
                    case 19 -> {
                        System.out.println(" If \n");
                        txtSalida.append(" If \n");
                    }
                    case 20 -> {
                        System.out.println(" Import \n");
                        txtSalida.append(" Import \n");
                    }
                    case 21 -> {
                        System.out.println(" In \n");
                        txtSalida.append(" In \n");
                    }
                    case 22 -> {
                        System.out.println(" INSTANCEOF \n");
                        txtSalida.append(" INSTANCEOF \n");
                    }
                    case 23 -> {
                        System.out.println(" New \n");
                        txtSalida.append(" New \n");
                    }
                    case 24 -> {
                        System.out.println(" Null \n");
                        txtSalida.append(" Null \n");
                    }
                    case 25 -> {
                        System.out.println(" Return \n");
                        txtSalida.append(" Return \n");
                    }
                    case 26 -> {
                        System.out.println(" Super \n");
                        txtSalida.append(" Super \n");
                    }
                    case 27 -> {
                        System.out.println(" SWITCH \n");
                        txtSalida.append(" SWITCH \n");
                    }
                    case 28 -> {
                        System.out.println(" This \n");
                        txtSalida.append(" This \n");
                    }
                    case 29 -> {
                        System.out.println(" Throw \n");
                        txtSalida.append(" Throw \n");   
                    }   
                    case 30 -> {
                        System.out.println(" True \n");
                        txtSalida.append(" True \n");
                    }
                    case 31 -> {
                        System.out.println(" Try \n");
                        txtSalida.append(" Try \n");
                    }
                    case 32 -> {
                        System.out.println(" Typeof \n");
                        txtSalida.append(" Typeof \n");
                    }
                    case 33 -> {
                        System.out.println(" Var \n");
                        txtSalida.append(" Tipo de dato Var \n");
                    }
                    case 34 -> {
                        System.out.println(" Void \n");
                        txtSalida.append(" Void \n");
                    }
                    case 35 -> {
                        System.out.println(" While \n");
                        txtSalida.append(" While \n");
                    }
                    case 36 -> {
                        System.out.println(" With \n");
                        txtSalida.append(" With \n");
                    }
                    case 37 -> {
                        System.out.println(" + \n");
                        txtSalida.append(" + \n");
                    }
                    case 38 -> {
                        System.out.println(" - \n");
                        txtSalida.append(" - \n");
                    }
                    case 39 -> {
                        System.out.println(" / \n");
                        txtSalida.append(" / \n");
                    }
                    case 40 -> {
                        System.out.println(" * \n");
                        txtSalida.append(" * \n");
                    }
                    case 41 -> {
                        System.out.println(" % \n");
                        txtSalida.append(" % \n");
                    }
                    case 42 -> {
                        System.out.println(" > \n");
                        txtSalida.append(" > \n");
                    }
                    case 43 -> {
                        System.out.println(" < \n");
                        txtSalida.append(" < \n");
                    }
                    case 44 -> {
                        System.out.println(" <= \n");
                        txtSalida.append(" <= \n");
                    }
                    case 45 -> {
                        System.out.println(" >= \n");
                        txtSalida.append(" >= \n");
                    }
                    case 46 -> {
                        System.out.println(" == \n");
                        txtSalida.append(" Case \n");   
                    }
                    case 47 -> {
                        System.out.println(" != \n");
                        txtSalida.append(" != \n");
                    }
                    
                    // Contextual Words
                    case 48 -> { 
                        System.out.println(" Any \n");
                        txtSalida.append(" Tipo de dato Any \n");
                    }
                    case 49 -> { 
                        System.out.println(" Boolean \n");
                        txtSalida.append(" Tipo de dato Boolean \n");
                    }
                    case 50 -> { 
                        System.out.println(" Constructor \n");
                        txtSalida.append(" Constructor \n");
                    }
                    case 51 -> { 
                        System.out.println(" Declare \n");
                        txtSalida.append(" Declare \n");
                    }
                    case 52 -> { 
                        System.out.println(" Get \n");
                        txtSalida.append(" Get \n");
                    }
                    case 53 -> { 
                        System.out.println(" Module \n");
                        txtSalida.append(" Module \n");
                    }
                    case 54 -> { 
                        System.out.println(" Require \n");
                        txtSalida.append(" Require \n");
                    }
                    case 55 -> { 
                        System.out.println(" Number \n");
                        txtSalida.append(" Tipo de dato number \n");
                    }
                    case 56 -> { 
                        System.out.println(" Set \n");
                        txtSalida.append(" Set \n");
                    }
                    case 57 -> { 
                        System.out.println(" String \n");
                        txtSalida.append(" Tipo de dato String \n");
                    }
                    case 58 -> { 
                        System.out.println(" Type \n");
                        txtSalida.append(" Type \n");
                    }
                    case 59 -> { 
                        System.out.println(" From \n");
                        txtSalida.append(" From \n");
                    }
                    case 60 -> { 
                        System.out.println(" Of \n");
                        txtSalida.append(" Of \n");
                    }
                    
                    // Strict Mode Reserved Words
                    case 61 -> { 
                        System.out.println(" As \n");
                        txtSalida.append(" As \n");
                    }
                    case 62 -> { 
                        System.out.println(" Implements \n");
                        txtSalida.append(" Implements \n");
                    }
                    case 63 -> { 
                        System.out.println(" Let \n");
                        txtSalida.append(" Tipo de dato let \n");
                    }
                    case 64 -> { 
                        System.out.println(" Package \n");
                        txtSalida.append(" Package \n");
                    }
                    case 65 -> { 
                        System.out.println(" Private \n");
                        txtSalida.append(" Private \n");
                    }
                    case 66 -> { 
                        System.out.println(" Protected \n");
                        txtSalida.append(" Protected \n");
                    }
                    case 67 -> { 
                        System.out.println(" Public \n");
                        txtSalida.append(" Public \n");
                    }
                    case 68 -> { 
                        System.out.println(" Static \n");
                        txtSalida.append(" Static \n");
                    }
                    case 69 -> { 
                        System.out.println(" Yield \n");
                        txtSalida.append(" Yield \n");
                    }
                    case 70 -> { 
                        System.out.println(" STRING_LITERAL \n");
                        txtSalida.append(" STRING_LITERAL \n");
                    }
                    case 71 -> { 
                        System.out.println(" LLAVE_APERTURA \n");
                        txtSalida.append(" LLAVE_APERTURA \n");
                    }
                    case 72 -> { 
                        System.out.println(" LLAVE_CIERRE \n");
                        txtSalida.append(" LLAVE_CIERRE \n");
                    }
                    case 73 -> { 
                        System.out.println(" PARENTESIS_APERTURA \n");
                        txtSalida.append(" PARENTESIS_APERTURA \n");
                    }
                    case 74 -> { 
                        System.out.println(" PARENTESIS_CIERRE \n");
                        txtSalida.append(" PARENTESIS_CIERRE \n");
                    }
                    case 75 -> { 
                        System.out.println(" PUNTO_COMA \n");
                        txtSalida.append(" PUNTO_COMA \n");
                    }
                    case 76 -> { 
                        System.out.println(" Punto \n");
                        txtSalida.append(" Punto \n");
                    }
                    case 77 -> { 
                        System.out.println(" Console \n");
                        txtSalida.append(" Console \n");
                    }
                    case 78 -> { 
                        System.out.println(" log \n");
                        txtSalida.append(" log \n");
                    }
                    case 79 -> { 
                        System.out.println(" COMILLA_SIMPLE \n");
                        txtSalida.append(" COMILLA_SIMPLE \n");
                    }
                    case 80 -> { 
                        System.out.println(" COMILLAS_DOBLES \n");
                        txtSalida.append(" COMILLAS_DOBLES \n");
                    }
                    case 81 -> { 
                        System.out.println(" IDENTIFICADOR \n");
                        txtSalida.append(" IDENTIFICADOR \n");
                    }
                    case 82 -> { 
                        System.out.println(" COMA \n");
                        txtSalida.append(" COMA \n");
                    }
                    case 83 -> { 
                        System.out.println(" COMENTARIO \n");
                        txtSalida.append(" COMENTARIO \n");
                    }
                    case 84 -> { 
                        System.out.println("ESPACIO \n");
                        txtSalida.append("ESPACIO \n");
                    }
                    case 85 -> { 
                        System.out.println(" Igual \n");
                        txtSalida.append(" Igual \n");
                    }
                    case 86 -> { 
                        System.out.println(" Numero \n");
                        txtSalida.append(" Numero \n");
                    }
                    case 87 -> { 
                        System.out.println(" Dos Puntos \n");
                        txtSalida.append(" Dos Puntos \n");
                    }
                    default -> {
                        System.out.println("\nFin del Archivo \n");
                        txtSalida.append("\nFin del Archivo \n");
                        break loop;
                    }
                }

            }           
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AnalisisLexico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AnalisisLexico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea txtSalida;
    // End of variables declaration//GEN-END:variables
}
